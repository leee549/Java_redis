<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--引入其他配置文件-->
    <import resource="applicationContext.xml"/>
    <!--配置注解驱动-->
    <mvc:annotation-driven/>



    <!--<mvc:annotation-driven conversion-service="conversionService" />-->
    <!--&lt;!&ndash;过滤静态资源&ndash;&gt;-->
    <mvc:resources location="/js/" mapping="/js/**"/>
    <!--<mvc:resources location="/css/" mapping="/css/**"/>-->
    <!--<mvc:resources location="/images/" mapping="/images/**"/>&lt;!&ndash;location为静态资源本地路径&ndash;&gt;-->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--&lt;!&ndash; 拦截所有mvc控制器 &ndash;&gt;-->
            <!--<mvc:mapping path="/**"/>-->
            <!--&lt;!&ndash; mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在-->
                <!--LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) &ndash;&gt;-->
            <!--<mvc:exclude-mapping path="/**/login" />-->
            <!--<mvc:exclude-mapping path="/css/**"/>-->
            <!--<mvc:exclude-mapping path="/images/**"/>-->
            <!--<mvc:exclude-mapping path="/js/**"/>-->
            <!--<bean class="cn.lhx.filter.LoginFilter" />-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean class="cn.lhx.resolver.MyExceptionResolver"/>
    <!--上传解析器,
    id必须为multipartResolver,前端控制器规定
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--限制上传大小 单位 byte-->
        <property name="maxUploadSize" value="10485760000"/>
    </bean>

    <mvc:interceptors>
    <mvc:interceptor>
        <mvc:mapping path="/**" />
        <bean class="cn.lhx.interceptor.FileUploadInterceptor">
            <!-- 1M -->
            <property name="maxSize" value="10485760" />
        </bean>
    </mvc:interceptor>
    </mvc:interceptors>


    <!--会扫描配置文件中的所有advisor，并为其创建代理-->
    <aop:config></aop:config>
    <!--引入shiro-->
    <!--<import resource="classpath:applicationContext-shiro.xml"/>-->

    <bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>